// Code generated by MockGen. DO NOT EDIT.
// Source: doer/doer.go

// Package mock_doer is a generated GoMock package.
package mock_doer

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mockdoer is a mock of doer interface.
type Mockdoer struct {
	ctrl     *gomock.Controller
	recorder *MockdoerMockRecorder
}

// MockdoerMockRecorder is the mock recorder for Mockdoer.
type MockdoerMockRecorder struct {
	mock *Mockdoer
}

// NewMockdoer creates a new mock instance.
func NewMockdoer(ctrl *gomock.Controller) *Mockdoer {
	mock := &Mockdoer{ctrl: ctrl}
	mock.recorder = &MockdoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockdoer) EXPECT() *MockdoerMockRecorder {
	return m.recorder
}

// Dosomething mocks base method.
func (m *Mockdoer) Dosomething(arg0 int, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dosomething", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Dosomething indicates an expected call of Dosomething.
func (mr *MockdoerMockRecorder) Dosomething(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dosomething", reflect.TypeOf((*Mockdoer)(nil).Dosomething), arg0, arg1)
}
